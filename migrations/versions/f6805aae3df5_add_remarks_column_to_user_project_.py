"""Add remarks column to User, Project, Machine

Revision ID: f6805aae3df5
Revises: 0f95db712bdf
Create Date: 2025-05-08 01:15:01.516586

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f6805aae3df5'
down_revision = '0f95db712bdf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('platine')
    with op.batch_alter_table('machine', schema=None) as batch_op:
        batch_op.add_column(sa.Column('remarks', sa.String(length=256), nullable=True))

    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.add_column(sa.Column('remarks', sa.String(length=256), nullable=True))

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('remarks', sa.String(length=256), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('remarks')

    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.drop_column('remarks')

    with op.batch_alter_table('machine', schema=None) as batch_op:
        batch_op.drop_column('remarks')

    op.create_table('platine',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=False),
    sa.Column('description', sa.VARCHAR(length=256), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    # ### end Alembic commands ###
